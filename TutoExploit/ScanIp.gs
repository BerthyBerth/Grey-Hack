if params.len < 1 then exit("<b>Usage: ScanIp [IP]</b>")

metax = include_lib("/lib/metaxploit.so")
if not metax then
	currentPath = get_shell.host_computer.current_path
	metax = include_lib(currentPath + "/metaxploit.so")
end if
if not metax then exit("Error: Can't find metaxploit library in the /lib path or the current folder")

kernel = metax.load("/lib/kernel_module.so")
if not kernel then
	currentPath = get_shell.host_computer.current_path
	kernel = include_lib(currentPath + "/kernel_module.so")
end if
if not kernel then exit("Error: Can't find kernel_router library in the /lib path or the current folder")

// ------------------------------------------

ScanLib = function(lib)
	
	addresses = metax.scan(lib)
	
	for address in addresses
        print("\n<b>" + address + "</b>")
		print(metax.scan_address(lib, address))
	end for
	
end function

// ------------------------------------------

victim_ip = params[0]

victim_router = get_router(victim_ip)
victim_ports = victim_router.used_ports

for port in victim_ports
    print("<b><u>Port number : " + port.port_number + "</b></u>")
	ScanLib(metax.net_use(victim_ip, port.port_number).dump_lib)
end for
